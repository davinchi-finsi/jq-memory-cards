/**
 * @license jq-memory-game v1.1.0
 * (c) 2020 Finsi, Inc. Based on @Jonathan Tarnate https://codepen.io/jstarnate
 */

!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";var t;(t=jQuery).widget("ui.memoryGame",{NAMESPACE:"memoryGame",_$board:null,_cards:null,_interactions:0,_flipped:[],_match:[],_completed:!1,_disableInteraction:!1,_$interactions:null,ON_START:"memoryGameStart",ON_CARD_FLIPPED:"memoryGameCardFlipped",ON_CARDS_CHECK:"memoryGameCardsCheck",ON_COMPLETE:"memoryGameComplete",options:{timeToWaitBetweenInteractions:1e3,shuffle:!0,selector:{interactions:"[data-jq-memory-game-interactions], [jq-memory-game-interactions]"},autoPair:!0,classes:{root:"jq-memory-game",disabled:"jq-memory-game--disabled",flipped:"jq-memory-game__card--flipped",completed:"jq-memory-game--completed",board:"jq-memory-game__board",match:"jq-memory-game__card--has-match",card:"jq-memory-game__card",cardBack:"jq-memory-game__card__back",cardFront:"jq-memory-game__card__front"},data:[]},_create:function(){this.element.addClass(this.options.classes.root),this._initialize()},_renderCard:function(s){var i,e,a,n;n=null!=(null===(i=null==s?void 0:s.front)||void 0===i?void 0:i.src)?'<img src="'+s.front.src+'" alt="'+s.front.alt+'"/>':"function"==typeof s.front?s.front(this,s):s.front,a=null!=(null===(e=null==s?void 0:s.back)||void 0===e?void 0:e.src)?'<img src="'+s.back.src+'" alt="'+s.back.alt+'"/>':"function"==typeof s.back?s.back(this,s):s.back;var o=t('<div class="'+this.options.classes.cardBack+'"></div>'),r=t('<div class="'+this.options.classes.cardFront+'"></div>'),d=t('\n                <div class="'+this.options.classes.card+'">\n                </div>\n            ');return a&&o.append(a),n&&r.append(n),d.append(o),d.append(r),d},_generateCards:function(){var t=this;if(this._cards=this.options.data.reduce((function(s,i){var e=t._renderCard(i);return e.data("card-id",i.id),s.push({id:i.id,$card:e}),t.options.autoPair&&s.push({id:i.id,$card:e.clone()}),s}),[]),!this.autoPair){var s=this._cards.reduce((function(t,s){var i=t[s.id];return null==i&&(i=[],t[s.id]=i),i.push(s),t}),{}),i=[];for(var e in s){var a=s[e];2!=a.length&&i.push("- id '"+e+"' has "+a.length+" item/s (exactly 2 items required)")}if(i.length>0)throw new Error("When the option 'autoPair' = false, all the items (cards) must be specified, 2 items for each id, but an incorrect number of items has been found:\n"+i.join("\n"))}},_renderBoard:function(){this._$board=t('<div class="'+this.options.classes.board+'"></div>'),this.element.append(this._$board)},_initialize:function(){this._renderBoard(),this._generateCards(),this._$board.delegate("."+this.options.classes.card,"click."+this.NAMESPACE,this._onCardClick.bind(this)),this.reset()},_updateInteractions:function(t){this._interactions=t,this._$interactions&&this._$interactions.text(this._interactions)},_shuffle:function(t){for(var s=t.length-1;s>0;s--){var i=Math.floor(Math.random()*(s+1)),e=t[s];t[s]=t[i],t[i]=e}return t},_onCardClick:function(s){var i=t(s.currentTarget).data("cardIndex");this.flip(i)},_checkCards:function(){var t=this;this._disableInteractions(!0),this._updateInteractions(this._interactions+1);var s=this._flipped,i=s[0],e=s[1];i.id==e.id?(i.$card.addClass(this.options.classes.match),e.$card.addClass(this.options.classes.match),this._match=this._match.concat(this._flipped)):setTimeout((function(){i.$card.removeClass(t.options.classes.flipped),e.$card.removeClass(t.options.classes.flipped)}),this.options.timeToWaitBetweenInteractions),this.element.trigger(this.ON_CARDS_CHECK,[this,i.id==e.id,this._interactions,this._flipped.slice()]),this._flipped=[],this._match.length==this._cards.length?(this.element.addClass(this.options.classes.completed),this._completed=!0,this.element.trigger(this.ON_COMPLETE,[this])):setTimeout((function(){t._disableInteractions(!1)}),this.options.timeToWaitBetweenInteractions)},_disableInteractions:function(t){this._disableInteraction=t,t?this._$cards.addClass(this.options.classes.disabled):this._$cards.removeClass(this.options.classes.disabled)},getInteractions:function(){return this._interactions},flip:function(t){if(!this.options.disabled&&!this._disableInteraction&&!this._completed){if(!(t>=0&&t-1<=this._cards.length))throw new Error("The required card for index "+t+" does not exist");var s=this._cards[t];s.$card.addClass(this.options.classes.flipped),this._flipped.push(s),this.element.trigger(this.ON_CARD_FLIPPED,[this,s]),this._flipped.length>=2&&this._checkCards()}},reset:function(){this._disableInteraction=!1,this._flipped=[],this._match=[],this._completed=!1,this._$interactions=this.element.find(this.options.selector.interactions),this.element.removeClass(this.options.classes.completed),this._updateInteractions(0),this.options.shuffle&&(this._cards=this._shuffle(this._cards));var t=this._cards.map((function(t,s){return t.$card.data("cardIndex",s),t.$card}));this._$board.append(t),this._$cards=this._$board.find("."+this.options.classes.card),this._$cards.removeClass([this.options.classes.flipped,this.options.classes.match,this.options.classes.disabled]),this.element.trigger(this.ON_START,[this])},destroy:function(){this.element.removeClass([this.options.classes.root,this.options.classes.disabled,this.options.classes.completed]),this._$options.off("."+this.NAMESPACE),this._$board.remove(),this._super()},disable:function(){this.element.addClass(this.options.classes.disabled),this._disableInteractions(),this._super()},enable:function(){this.element.removeClass(this.options.classes.disabled),this._enableInteractions(),this._super()}})}));
